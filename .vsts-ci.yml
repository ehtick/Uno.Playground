jobs:

- template: .vsts-ci.Linux.yml

- job: Desktop
  pool:
    vmImage: 'windows-2022'

  workspace:
    clean: all
    
  steps:
  - checkout: self
    clean: true
    lfs: true

  - task: UseDotNet@2
    displayName: 'Use .NET Core sdk'
    inputs:
      packageType: sdk
      version: 2.1.x
      
  - task: UseDotNet@2
    displayName: 'Use .NET SDK'
    inputs:
      packageType: sdk
      version: 9.0.100-rc.2.24474.11
      includePreviewVersions: true

  - template: build/canary-updater.yml
  - template: build/gitversion.yml

  - script: |
      cd $(build.sourcesdirectory)
      dotnet publish -c Release $(build.sourcesdirectory)/src/Uno.Playground-playground-only.slnf  "/p:InformationalVersion=$GITVERSION_INFORMATIONALVERSION" /bl:$(build.artifactstagingdirectory)/playground.binlog

    displayName: 'Build Playground'

  - task: MSBuild@1
    inputs:
      solution: src\Uno.Playground-api-only.slnf
      msbuildLocationMethod: version
      msbuildVersion: latest
      msbuildArchitecture: x86
      msbuildArguments: /r /p:CheckExclusions=True /p:Configuration=Release /bl:$(build.artifactstagingdirectory)\build.binlog
      clean: false
      maximumCpuCount: true
      restoreNugetPackages: false
      logProjectEvents: false
      createLogFile: false

  - task: DotNetCoreCLI@2
    inputs:
      command: publish
      publishWebProjects: false
      projects: src\Uno.Playground.Api\Uno.Playground.Api.csproj
      arguments: --configuration Release --output $(Build.ArtifactStagingDirectory)/api
      zipAfterPublish: true
      modifyOutputPath: true

  - task: PublishBuildArtifacts@1
    condition: always()
    inputs:
      PathtoPublish: $(build.artifactstagingdirectory)
      ArtifactName: drop
      ArtifactType: Container
